include partials/head
include partials/header
include partials/teaser
include partials/more
include partials/footer
include partials/body-end


mixin cls-aside-article-collection(c)
  .cls-aside-group
    h2(class="teaser-meta-title")= c.title
    each article in c.articles
      +teaser(article)


mixin cls-aside(aside)
  each item in aside
    case item.type_
      when "articles": +cls-aside-article-collection(item)
      when "newest-of-category": +cls-aside-article-collection(item)
      when "newest-of-collection": +cls-aside-article-collection(item)


doctype html
html(lang="de")
  //- either classification or tag have to be null
  - var clsTitle = classification ? classification.title : tag ? tag.name : ''

  head
    title #{clsTitle} | Das Filter

    meta(property="og:title", content="Das Filter")
    meta(property="og:description", content="#{clsTitle}")
    meta(property="og:url", content=urls.full())
    meta(property="og:type", content="website")
    meta(property="og:image", content=urls.asset('img/df_logo_3d.jpg'))

    link(href=urls.rss() rel="alternate" type="application/rss+xml" title="Das Filter RSS feed")

    +head

  body
    +header(classifications, classification, tag, 'cls')

    main.index-page.cls-page
      - teaserOptions = { showText: true, showCategory: !(classification && classification.type_ === 'Category') }
      .cls-wrapper
        .cls-main

          h2(class="teaser-meta-title")= clsTitle
          .teasers
            each teaser in teasers
              +teaser(teaser)

          if nextDate
            +more(urls.current() + '?date=' + nextDate)

        aside.cls-aside
          .cls-aside-inner
            if stage
              +cls-aside(stage.aside)

    +footer(classifications, classification)
    +body-end
