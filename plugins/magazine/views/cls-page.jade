include partials/head
include partials/header
include partials/teaser
include partials/more
include partials/footer
include partials/body-end


mixin cls-aside-article-collection(c)
  .cls-aside-group
    h2(class="cls-aside-group-title")= c.title
    each article in c.articles
      +teaser-clspage('teaser-cls-aside', article)


mixin cls-aside(aside)
  each item in aside
    case item.type_
      when "articles": +cls-aside-article-collection(item)
      when "newest-of-category": +cls-aside-article-collection(item)
      when "newest-of-collection": +cls-aside-article-collection(item)


doctype html
html(lang="de")
  head
    if classification
      title #{classification.title} | Das Filter
    else if tag
      title #{tag.name} | Das Filter

    meta(property="og:title", content="Das Filter")
    if classification
      meta(property="og:description", content="#{classification.title}")
    else if tag
      meta(property="og:description", content="#{tag.name}")
    meta(property="og:url", content=urls.full())
    meta(property="og:type", content="website")
    meta(property="og:image", content=urls.asset('img/df_logo_3d.jpg'))

    link(href=urls.rss() rel="alternate" type="application/rss+xml" title="Das Filter RSS feed")

    +head

  body
    //- either classification or tag have to be null
    +header(classifications, classification, tag)

    main.index-page.cls-page
      .cls-wrapper
        .cls-main
          .cls-main-inner
            each article in articles
              +teaser-clspage('teaser-cls', article, true)
            if nextDate
              +more(urls.current() + '?date=' + nextDate)
        aside.cls-aside
          .cls-aside-inner
            if stage
              +cls-aside(stage.aside)

    +footer
    +body-end
